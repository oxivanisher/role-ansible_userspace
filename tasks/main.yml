---
- name: Gather os specific variables
  ansible.builtin.include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
  tags: vars

- name: Ensure requried packages are installed for Debian
  ansible.builtin.package:
    name: "{{ ansible_userspace_packages }}"
    state: present
  become: true
  become_user: root

- name: Enable redis-server
  ansible.builtin.service:
    name: redis-server
    state: started
    enabled: true
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: root

- name: Install required dependencies into the virtual python environment
  ansible.builtin.pip:
    name:
      - python-debian
      - redis
      - ansible
      - ansible-lint
    virtualenv: "{{ lookup('env', 'HOME') }}/{{ ansible_userspace_venv_subdir }}"
  become: true
  become_user: "{{ ansible_userspace_user }}"

- name: Ensure ~/.local/bin/ exists
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.local/bin/"
    state: directory
    owner: "{{ ansible_userspace_user }}"
    group: "{{ ansible_userspace_user }}"
    mode: "0770"
  become: true
  become_user: "{{ ansible_userspace_user }}"

- name: Link some useful bind from venv to ~/.local/bin/
  ansible.builtin.file:
    src: "{{ lookup('env', 'HOME') }}/{{ ansible_userspace_venv_subdir }}/bin/{{ item }}"
    dest: "{{ lookup('env', 'HOME') }}/.local/bin/{{ item }}"
    state: link
    owner: "{{ ansible_userspace_user }}"
    group: "{{ ansible_userspace_user }}"
    follow: false
  loop:
    - ansible
    - ansible-lint
    - ansible-playbook
    - ansible-galaxy
    - python3
  ignore_errors: "{{ ansible_check_mode }}"
  become: true
  become_user: "{{ ansible_userspace_user }}"
